name: QuartzLauncher Build

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build QuartzLauncher
    runs-on: ubuntu-latest

    steps:
      # ==================== Checkout Repositories ====================
      - name: Checkout QuartzLauncher
        uses: actions/checkout@v4
        with:
          path: quartzlauncher
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Checkout PrismLauncher
        uses: actions/checkout@v4
        with:
          repository: PrismLauncher/PrismLauncher
          ref: develop
          path: prismlauncher
          fetch-depth: 0
          persist-credentials: false

      # ==================== Check for New Release ====================
      - name: Get latest PrismLauncher tag
        id: prism-tag
        working-directory: prismlauncher
        run: |
          # Get the latest tag by version (sorted)
          TAG=$(git tag -l --sort=-v:refname | head -n 1)
          if [ -z "$TAG" ]; then
            TAG=""
          fi
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "📦 Latest PrismLauncher tag: ${TAG}"

      - name: Check if already synced
        id: check
        working-directory: quartzlauncher
        run: |
          TAG="${{ steps.prism-tag.outputs.tag }}"

          if [ -z "$TAG" ]; then
            echo "❌ No tags found in PrismLauncher"
            echo "should-build=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1; then
            echo "✅ Already synced - tag $TAG exists"
            echo "should-build=false" >> "$GITHUB_OUTPUT"
          else
            echo "🆕 New release detected: $TAG"
            echo "should-build=true" >> "$GITHUB_OUTPUT"
          fi

      # ==================== Apply Customizations ====================
      - name: Copy custom icons
        if: steps.check.outputs.should-build == 'true'
        run: |
          echo "🎨 Copying custom icons..."
          mkdir -p prismlauncher/program_info/
          if [ -d "quartzlauncher/Icons" ] && [ "$(ls -A quartzlauncher/Icons 2>/dev/null)" ]; then
            cp -r quartzlauncher/Icons/* prismlauncher/program_info/
            echo "✅ Icons copied successfully"
          else
            echo "⚠️  No custom icons found, using defaults"
          fi

      - name: Apply patches
        if: steps.check.outputs.should-build == 'true'
        working-directory: prismlauncher
        run: |
          echo "🔧 Applying patches..."
          shopt -s nullglob
          PATCHES=(../quartzlauncher/patches/*.patch)

          if [ ${#PATCHES[@]} -eq 0 ]; then
            echo "⚠️  No patches to apply"
            exit 0
          fi

          for patch in "${PATCHES[@]}"; do
            PATCH_NAME=$(basename "$patch")
            echo "  → Applying $PATCH_NAME"
            if ! git apply "$patch"; then
              echo "❌ Failed to apply: $PATCH_NAME"
              exit 1
            fi
          done
          echo "✅ Successfully applied ${#PATCHES[@]} patch(es)"

      # ==================== Sync Branch ====================
      - name: Configure Git
        if: steps.check.outputs.should-build == 'true'
        working-directory: prismlauncher
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Sync quartzlauncher branch
        if: steps.check.outputs.should-build == 'true'
        working-directory: prismlauncher
        id: sync
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          TAG="${{ steps.prism-tag.outputs.tag }}"

          # Create or switch to branch
          git checkout -b quartzlauncher 2>/dev/null || git checkout quartzlauncher
          git add -A

          # Check for changes
          if git diff --cached --quiet; then
            echo "has-changes=false" >> "$GITHUB_OUTPUT"
            echo "ℹ️  No changes detected"
          else
            # Commit and push changes
            git commit -m "Sync with PrismLauncher $TAG" \
                       -m "- Applied QuartzLauncher customizations" \
                       -m "- Custom icons and patches integrated"

            git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}.git
            git push -f origin quartzlauncher

            echo "has-changes=true" >> "$GITHUB_OUTPUT"
            echo "✅ Branch synced and pushed"
          fi

      # ==================== Create Release Tag ====================
      - name: Create release tag
        if: steps.check.outputs.should-build == 'true'
        working-directory: quartzlauncher
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          TAG="${{ steps.prism-tag.outputs.tag }}"

          git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}.git

          # Delete tag locally if it exists (shouldn't happen, but just in case)
          git tag -d "$TAG" 2>/dev/null || true

          # Create and push the new tag
          git tag -a "$TAG" -m "QuartzLauncher $TAG" \
                           -m "" \
                           -m "Based on PrismLauncher $TAG with custom patches and branding."
          git push origin "$TAG"

          echo "🏷️  Created and pushed tag: $TAG"
      # ==================== Summary ====================
      - name: Workflow summary
        if: always()
        run: |
          echo "### 📊 Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PrismLauncher Version:** \`${{ steps.prism-tag.outputs.tag || 'N/A' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check.outputs.should-build }}" == "true" ]; then
            echo "### ✅ Actions Completed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- 🎨 Custom icons applied" >> $GITHUB_STEP_SUMMARY
            echo "- 🔧 Patches integrated" >> $GITHUB_STEP_SUMMARY
            echo "- 🔄 Synced to \`quartzlauncher\` branch" >> $GITHUB_STEP_SUMMARY
            echo "- 🏷️  Tagged as \`${{ steps.prism-tag.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY

            if [ "${{ steps.sync.outputs.has-changes }}" == "true" ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Status:** 🟢 New changes committed and pushed" >> $GITHUB_STEP_SUMMARY
            else
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Status:** 🟡 No code changes (tag-only update)" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "### ℹ️ No Action Required" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Already up-to-date with PrismLauncher \`${{ steps.prism-tag.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Last checked: $(date -u '+%Y-%m-%d %H:%M:%S UTC')*" >> $GITHUB_STEP_SUMMARY
